Bugs
====
 o rewrite zombie (bug in movement!, attacks too often, use events, etc...)
 o memleaks, segfaults?
 o key vs. trigger in map2
 o fall event (DONE?)
 o players die event segfault (eg. olaf)


Code
====

 o General:
     o (BIG) move drawing to the objects/menus/etc (create a draw() function)!
     o pointers => references where possible
     o Describe everything using Doxygen styles, move the documentation from
      *.cpp to the headers...
     o Idea: _all_ objects should have a "core" like the players (curpos thing)
       This would help in many ways and should be a frame information and not an
       image as done for players atm!
     o Use Singletons
     o IDEA: Introduce abstract classes for all engines and load the corresponding
       concrete class depending on the game_mode instead of using if...

 o Move/Fall/push/crash/collisions:
     o move should be a property of a common object
     o Hit should give either much more information or all logic should be done inside
       move (BAD)
     o collision reactions should depend on the corresponding types and whether we
       already are near the object or not => getCollisionType(obj1,obj2)?
     o First priority (first run): find out where the object will move to (HARD)
       => add a bool notchange parameter and pass it on to all actions
     o movement into a movable object should just move the object
     o if the movement is "forced" the moved object should be hit hard when it collides
       otherwise a hit would stop the moving object as well...
       -> I have no idea about how the push should look like, elevators can be pushed
          up, even though you don't collide with them on top
       -> characters should be "pushable", eg. a stone that falls down pushes the
          character down or better: an elevator should push the characters up
     o In case of the elevator, the players are somehow "bound" to the elevator (ie.
       it's not like: the elevator moves, the character falls, but they move together)
       Solution: The elevators move function checks all objects it would
         hit, if they are pushable (not dense) they are moved first if
         possible. If it's not possible, do sthg else (stop the elevator and hit the
         object/whatever)...

 o Events/Animations:
     o Invent more intelligent and more robust! fallback methods for animations
     o Allow empty animation, decouple (put more logic in) these relations:
       object (pos, draw?), game(time, state, handler), gfxeng(draw), animation(empty,
       frame, update, time, draw)?, frame, global/current (public, private) properties
     o Make all events quite short, ie. almost all events become animation
       events
     o IDEA: couple left and right animations somehow to reduce the code size
        - eg. set offsets for left, right, mleft, mright...
     o IDEA: just store one side and add some flipping logic to the image
          loading process...
     o IDEA: change Animation* pointers to Animation (or references or auto_ptr),
       leave only animation as a pointer and get the address each time...
     o introduce animation events that play an animation and end when it's
       finnished (always ESTATE_BUSY or abort animation?)
     o allow an event length depending on animation length, or: relate events more
       with animations!!!

 o Placement code:
     o IDEA: allow moves from NULL and/or to NULL
     o units should be placed in a way they won't give conflicts, examples:
        - teleport should really teleport (above ground if possible)
        - if a unit's position is too low and it dies the dead corps is
          illegaly placed!
        - the placement should somehow involve checkPlace...

 o (Plugins):
     o move object creation code (addObjectByName) to the objects
     o create dynamical plugins for all objects (or compile all in)

 o Ideas/Improvements:
     o IMPROVE?: cleanup set_difference stuff => targets should be updated if
       an object dies in an intelligent way...
     o IDEA: merge otype and ctype and make all moves/etc depend on it
     o IDEA (old): Add attributes:
        - crushable (ie. weapon fart, jump, run destroys them?)
        - bombable (ie. bomb destroys them)
        - multistates? => bridges, door, stone block


Progress
========

 o Monsters / AI: VERY BAD
 o Game functionality (): BAD
 o Events / Effects: BAD, MESS
 o Object (including parameter) loading: BAD
 o Move logic: ACCEPTABLE, BUGGED
 o Objects (players, items, etc): ACCEPTABLE
 o Input Handler: ACCEPTABLE, WORKS
 o Collision detection: OK
 o Fall logic: GOOD
 o Animation / Image structure: VERY GOOD


Features/Ideas/Wishlist
=======================

 o Make water movements possible (eric)
 o improve the map editor even further
 o Simple AI
 o In game scaling?

 o Finnish the vikings:
     - weapons: better run, jump2, fart, arm, fire
     - baleog swing (hard one)

 o Add new objects:
     - ladder
     - rope
     - "deadly edges"
     - electric fence

 o Monsters:
     - stone?
     - knight
     - dragon
     - skeleton -> zombie
     - fish
     - firetower
 
 o Weapons:
    - fireballs
    - sword
    - claw
    - run 
    - fart
    - jump
    - arm

 o Items:
    - special items
